services:
  # Qdrant - Vector Database
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: rag-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Unstructured.io Document Parser Service
  unstructured:
    image: robwilkes/unstructured-api:latest  # ARM64 compatible image
    container_name: rag-unstructured
    ports:
      - "8080:8080"
    networks:
      - rag-network
    environment:
      - UNSTRUCTURED_API_KEY=${UNSTRUCTURED_API_KEY:-}
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # Unstructured takes longer to start

  # Embedding Service
  embedding-service:
    image: zuful/embedding-service:latest
    container_name: rag-embedding-service
    ports:
      - "5001:5001"
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface  # Mount HF cache (writable)
    environment:
      - HUGGINGFACE_HUB_CACHE=/root/.cache/huggingface
      - HF_TOKEN=${HF_TOKEN:-}  # Pass HF_TOKEN from environment if set
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Embeddingestion Service
  embeddingestion:
    image: zuful/embeddingestion:latest
    container_name: rag-embeddingestion
    ports:
      - "8081:8081"
    depends_on:
      qdrant:
        condition: service_healthy
      embedding-service:
        condition: service_healthy
    environment:
      - QDRANT_URL=http://qdrant:6333
      - EMBEDDING_SERVICE_HOST=embedding-service
      - EMBEDDING_SERVICE_PORT=5001
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # RAG Orchestrator (ingest service)
  rag-orchestrator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag-orchestrator
    depends_on:
      unstructured:
        condition: service_healthy  # Unstructured.io API
      embedding-service:
        condition: service_healthy  # Embedding generation
      embeddingestion:
        condition: service_healthy  # Vector storage
      qdrant:
        condition: service_healthy  # Vector database
    environment:
      - QDRANT_URL=http://qdrant:6333
      - EMBEDDING_URL=http://embedding-service:5001/embed
      - DOC_PARSER_URL=http://unstructured:8080/parse  # Updated to Unstructured.io
      - EMBEDDINGESTION_URL=http://embeddingestion:8081
      - COLLECTION_NAME=novabot-rh
    volumes:
      - ./data:/root/data:ro  # Mount data directory as read-only
    networks:
      - rag-network
    # No ports exposed - this is an orchestrator that runs jobs
    # If you want to expose it, uncomment the next lines:
    # ports:
    #   - "8082:8082"

volumes:
  qdrant_data:
    driver: local

networks:
  rag-network:
    driver: bridge
  